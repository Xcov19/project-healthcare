[tool.poetry]
name = "xcov19"
version = "0.1.0"
description = "api backend for mhc UI"
authors = ["codecakes <akulmat@protonmail.com>"]
readme = "README.md"
package-mode = true

[tool.poetry.dependencies]
python = "^3.12"
pydantic = "^2.8.2"
blacksheep = "^2.0.7"
Hypercorn = "^0.17.3"
MarkupSafe = "^2.1.3"
uvloop = {version = "^0.20.0", markers = "sys_platform != 'win32'"}
pydantic-settings = {version = "^2.3.4", markers = "sys_platform != 'win32'"}
cython = "^3.0.11"
sqlalchemy = {version="^2.0.34", markers = "sys_platform != 'win32'", extras = ["asyncio"]}
alembic = "^1.13.2"
aiosqlite = "^0.20.0"
sqlmodel = {version="^0.0.22"}

# [tool.poetry.group.dev.dependencies]

ruff = { version = "^0.6.3", optional = true }
mypy = { version = "^1.11.2", optional = true }
blacksheep-cli = { version = "^0.0.4", optional = true }
rich = { version = "^13.8.0", optional = true }
pyright = { version = "^1.1.379", optional = true }
pre-commit = { version="^3.7.1", optional = true }
pytest-asyncio = { version = "^0.24.0", optional = true }
anyio = { version = "^4.4.0", optional = true }
black = { version = "^24.8.0", optional = true }
pytest = { version = "^8.2.2", markers = "platform_python_implementation == 'CPython'", optional = true }

[tool.poetry.extras]
commit = ["pre-commit"]
test = ["pytest", "pytest-asyncio", "anyio"]
dev = ["ruff", "mypy", "blacksheep-cli", "rich", "pyright", "pre-commit", "pytest", "pytest-asyncio", "anyio", "black"]

[tool.pytest.ini_options]
addopts = "-ra -q"
testpaths = [
    "xcov19/tests",
]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "api: mark api tests",
    "unit: marks tests as unit tests",
    # Add more markers as needed
]
# Add env vars when running pytest
env = [
    "APP_ENV=test",
    "APP_DB_ENGINE_URL=sqlite+aiosqlite://"
]

[tool.pyright]
pythonVersion = "3.12"
useLibraryCodeForTypes = true
verboseOutput = true
include = [
    "xcov19/app",
    "xcov19/domain",
    "xcov19/tests"
]
exclude = [
    "**/node_modules",
    "**/__pycache__"]
venv = "xcov19-7M_0Y8Vx-py3.12"
reportMissingImports = true

[[tool.pyright.executionEnvironments]]
root = "."
extraPaths = [
    "$(poetry env info -p)/lib/python3.12/site-packages",
    "./xcov19",
    "./xcov19/domain/",
    "./xcov19/app/",
    "./xcov19/tests/"
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
